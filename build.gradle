plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'com.alenashomanova'
version '1.0-SNAPSHOT'
compileJava.options.encoding = 'UTF-8' // устанавливает кодировку для компилируемого кода
javadoc.options.encoding = 'UTF-8' // устанавливает кодировку для генерируемой документации
compileTestJava.options.encoding = 'UTF-8'

allure {
    report {
        version.set("2.19.0")
    }
    adapter { //отвечает за появление allure-results
        aspectjWeaver.set(true) //Обработка аннотации @Step
        frameworks {
            junit5 { //framework name
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.8.1',     // JUnit5
            'com.codeborne:selenide:6.12.2',                            // Selenide
            'io.qameta.allure:allure-selenide:2.20.1',                  // Allure S  elenide
            'org.aeonbits.owner:owner:1.0.12',                          // Owner lib to make configs
            'org.assertj:assertj-core:3.23.1',                          // Assertions
            'org.postgresql:postgresql:42.5.1'                          // To connect to a PostrgreSQL DB
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'      // JUnit5
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())

}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
